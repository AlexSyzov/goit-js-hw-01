{"version":3,"sources":["styled.js","components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","App.js","index.js"],"names":["FontFamily","FontSettings","Header","styled","h2","FeedbackButton","button","FeedbackContainer","div","NotificationContainer","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","FeedbackOptions","options","onLeaveFeedback","onClick","Section","title","children","Notification","message","App","state","handleFeedbackButtonClick","feedbackType","setState","prevState","countTotalFeedback","Object","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","toFixed","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"67BAEA,IAAMA,EAAU,uFAQVC,EAAY,cAJJ,yBAII,eAEdD,EAFc,MAKLE,EAASC,IAAOC,GAAV,IACfJ,GAGSK,EAAiBF,IAAOG,OAAV,KAwBdC,EAAoBJ,IAAOK,IAAV,IAC1BP,GAGSQ,EAAwBN,IAAOK,IAAV,IAE9BP,GC7CES,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,eAACR,EAAD,oBAA0BI,KAC1B,eAACJ,EAAD,uBAA6BK,KAC7B,eAACL,EAAD,mBAAyBM,KACzB,eAACN,EAAD,qBAA2BO,OAC1BA,IAAU,GACT,eAACP,EAAD,iCACsBQ,IADtB,YAQRL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,GAWQH,Q,QC9BTO,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAAsB,cAC3BD,EAD2B,GACjDP,EADiD,KAC3CC,EAD2C,KAClCC,EADkC,KAGxD,OACE,qCACE,cAACR,EAAD,CAAgBe,QAAS,kBAAMD,EAAgBR,IAA/C,kBAGA,cAACN,EAAD,CAAgBe,QAAS,kBAAMD,EAAgBP,IAA/C,qBAGA,cAACP,EAAD,CAAgBe,QAAS,kBAAMD,EAAgBN,IAA/C,qBAUNI,EAAgBD,aAAe,CAC7BE,QAAS,CAAC,OAAQ,UAAW,QAGhBD,QCRAI,EAjBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACGD,GACC,mCACE,cAACpB,EAAD,UAASoB,MAGZC,MCRDC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAAChB,EAAD,UAAwBgB,KAGjCD,EAAaR,aAAe,CAC1BS,QAAS,WAOID,QCVME,E,4MACnBC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,0BAA4B,SAACC,GAAD,OAC1B,EAAKC,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEXF,EAAeE,EAAUF,GAAgB,Q,EAG9CG,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKP,OAAOQ,QACxB,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,IAC7C,I,EAGJC,gCAAkC,WAChC,OAAS,EAAKX,MAAMhB,KAAO,EAAKqB,qBAAwB,KAAKO,QAAQ,I,uDAG7D,IAAD,EACwBC,KAAKb,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASS,MAAM,wBAAf,SACE,cAAC,EAAD,CACEJ,QAAO,YAAMe,OAAOQ,KAAKD,KAAKb,QAC9BR,gBAAiBqB,KAAKZ,8BAIK,IAA9BY,KAAKR,qBACJ,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,cAAC,EAAD,CAASH,MAAM,aAAf,SACE,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKR,mBACZjB,mBAAoByB,KAAKF,2C,GA5CNI,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.deb67a6b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst FontFamily = `\r\n  font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\r\n`;\r\n\r\nconst FontSize = `\r\n  font-size: 20px;\r\n`;\r\n\r\nconst FontSettings = `\r\n  ${FontSize}\r\n  ${FontFamily}\r\n`;\r\n\r\nexport const Header = styled.h2`\r\n  ${FontFamily}\r\n`;\r\n\r\nexport const FeedbackButton = styled.button`\r\n  width: 100px;\r\n  background-color: #fff5ee;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n  border: 1px solid #dcdcdc;\r\n  border-radius: 6px;\r\n  font-weight: 600;\r\n  box-shadow: 1px 1px 2px #c0c0c0;\r\n  transition: all 0.2s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #da70d6;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border: 1px dotted #bc8f8f;\r\n    background-color: #fff0f5;\r\n    width: 110px;\r\n  }\r\n`;\r\n\r\nexport const FeedbackContainer = styled.div`\r\n  ${FontSettings}\r\n`;\r\n\r\nexport const NotificationContainer = styled.div`\r\n  margin-top: 20px;\r\n  ${FontSettings}\r\n`;\r\n","import React from \"react\";\r\nimport { FeedbackContainer } from \"../styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <FeedbackContainer>Good: {good}</FeedbackContainer>\r\n      <FeedbackContainer>Neutral: {neutral}</FeedbackContainer>\r\n      <FeedbackContainer>Bad: {bad}</FeedbackContainer>\r\n      <FeedbackContainer>Total: {total()}</FeedbackContainer>\r\n      {total() > 0 && (\r\n        <FeedbackContainer>\r\n          Positive feedback: {positivePercentage()} %\r\n        </FeedbackContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport { FeedbackButton } from \"../styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const [good, neutral, bad] = options;\r\n\r\n  return (\r\n    <>\r\n      <FeedbackButton onClick={() => onLeaveFeedback(good)}>\r\n        Good\r\n      </FeedbackButton>\r\n      <FeedbackButton onClick={() => onLeaveFeedback(neutral)}>\r\n        Neutral\r\n      </FeedbackButton>\r\n      <FeedbackButton onClick={() => onLeaveFeedback(bad)}>Bad</FeedbackButton>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nFeedbackOptions.defaultProps = {\r\n  options: [\"good\", \"neutral\", \"bad\"],\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport { Header } from \"../styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      {title && (\r\n        <>\r\n          <Header>{title}</Header>\r\n        </>\r\n      )}\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { NotificationContainer } from \"../styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <NotificationContainer>{message}</NotificationContainer>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: \"No data\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedbackButtonClick = (feedbackType) =>\n    this.setState((prevState) => ({\n      ...prevState,\n      [feedbackType]: prevState[feedbackType] + 1,\n    }));\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce(\n      (accumulator, currentValue) => accumulator + currentValue,\n      0\n    );\n\n  countPositiveFeedbackPercentage = () => {\n    return ((this.state.good / this.countTotalFeedback()) * 100).toFixed(0);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[...Object.keys(this.state)]}\n            onLeaveFeedback={this.handleFeedbackButtonClick}\n          />\n        </Section>\n\n        {this.countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}