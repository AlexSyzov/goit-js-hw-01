{"version":3,"sources":["components/profile/styles.js","components/profile/Stats.js","components/profile/Description.js","components/profile/Profile.js","components/statistics/styles.js","components/statistics/List.js","components/statistics/Statistics.js","components/friendList/styles.js","components/friendList/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/styles.js","components/transactionHistory/TransactionLines.js","components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Container","styled","div","DescrContainer","Avatar","img","Name","p","Tag","Location","StatsContainer","ul","Label","span","Quantity","Stats","followers","views","likes","Description","avatar","name","tag","location","src","alt","Profile","stats","defaultProps","Section","section","Title","h2","StatList","Item","li","Percentage","List","map","id","label","percentage","title","propTypes","PropTypes","string","arrayOf","exact","isRequired","number","Statistics","Online","Offline","FriendListItem","isOnline","FriendList","friends","Table","table","TableHeader","th","TableData","td","TransactionLines","items","type","amount","currency","TransactionHistory","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df49752.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n// Main container\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  width: 30%;\n  background-color: #fdf5e6;\n  padding-top: 30px;\n  border: 1px solid #c0c0c0;\n  border-bottom: none;\n  margin-top: 10px;\n  box-shadow: 2px 2px 7px #c0c0c0;\n`;\n\n// Description\n\nexport const DescrContainer = styled.div`\n  text-align: center;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 100%;\n  width: 80px;\n  height: 80px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 8px;\n`;\n\nexport const Tag = styled.p`\n  color: #c0c0c0;\n  font-size: 14px;\n  margin-bottom: 8px;\n`;\n\nexport const Location = styled.p`\n  color: #c0c0c0;\n  margin-bottom: 20px;\n`;\n\n// Stats\n\nexport const StatsContainer = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style-type: none;\n  width: 100%;\n  background-color: #f0ffff;\n\n  & > li {\n    text-align: center;\n    width: 33.33%;\n    padding-top: 26px;\n    height: 80px;\n    border: 1px solid #c0c0c0;\n    text-align: center;\n    transition: all 0.2s linear;\n  }\n\n  & > li:last-child {\n    border-left: none;\n    border-right: none;\n  }\n\n  & > li:first-child {\n    border-right: none;\n    border-left: none;\n  }\n\n  & > li:hover {\n    background-color: #7fffd4;\n  }\n`;\n\nexport const Label = styled.span`\n  display: block;\n  color: #c0c0c0;\n`;\n\nexport const Quantity = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import { StatsContainer, Label, Quantity } from './styles';\n\nconst Stats = ({ followers, views, likes }) => {\n  return (\n    <StatsContainer>\n      <li>\n        <Label>Followers</Label>\n        <Quantity>{followers}</Quantity>\n      </li>\n      <li>\n        <Label>Views</Label>\n        <Quantity>{views}</Quantity>\n      </li>\n      <li>\n        <Label>Likes</Label>\n        <Quantity>{likes}</Quantity>\n      </li>\n    </StatsContainer>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport { DescrContainer, Avatar, Name, Tag, Location } from './styles';\n\nconst Description = ({ avatar, name, tag, location }) => {\n  return (\n    <DescrContainer>\n      <Avatar src={avatar} alt=\"Аватар пользователя\" />\n      <Name>{name}</Name>\n      <Tag>@{tag}</Tag>\n      <Location>{location}</Location>\n    </DescrContainer>\n  );\n};\n\nexport default Description;\n","import React from 'react';\nimport Stats from './Stats';\nimport Description from './Description';\nimport { Container } from './styles';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <Container>\n      <Description avatar={avatar} name={name} location={location} tag={tag} />\n      <Stats\n        followers={stats.followers}\n        views={stats.views}\n        likes={stats.likes}\n      />\n    </Container>\n  );\n};\n\nProfile.defaultProps = {\n  location: 'undefined',\n  avatar: '#',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired),\n};\n\nexport default Profile;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 400px;\n  margin: 80px auto 0 auto;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 26px;\n  font-family: 'Arial';\n  margin-bottom: 40px;\n`;\n\nexport const StatList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  height: 80px;\n  text-align: center;\n  background-color: #bc8f8f;\n  padding-top: 14px;\n  box-sizing: border-box;\n  color: #f0ffff;\n  width: 80px;\n  border: 2px dotted #f0ffff;\n  box-shadow: 2px 2px 7px #000;\n`;\n\nexport const Label = styled.span`\n  display: block;\n  font-size: 14px;\n  margin-bottom: 8px;\n`;\n\nexport const Percentage = styled.span`\n  font-size: 22px;\n  color: #000;\n`;\n","import React from 'react';\nimport { Item, Label, Percentage, StatList } from './styles';\n\nconst List = ({ stats }) => {\n  return (\n    <StatList>\n      {stats.map(({ id, label, percentage }) => {\n        return (\n          <Item\n            key={id}\n            /*style={{\n              backgroundColor: `rgb(${randomColorSetter()}, ${randomColorSetter()}, ${randomColorSetter()})`,\n            }}*/\n          >\n            <Label>{label}</Label>\n            <Percentage>{percentage}%</Percentage>\n          </Item>\n        );\n      })}\n    </StatList>\n  );\n};\n\n// If random colors are needed\n/*const randomColorSetter = () => {\n  return Math.random() * 255;\n};*/\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section, Title } from './styles';\nimport List from './List';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n\n      <List stats={stats} />\n    </Section>\n  );\n};\n\nList.defaultProps = {\n  title: '',\n};\n\nList.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  width: 150px;\n  margin: 80px 0 0 20px;\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 60px;\n  margin-bottom: 10px;\n  background-color: #c0c0c0;\n  padding: 0 20px 0 10px;\n  border-radius: 20px;\n  box-shadow: 2px 2px 5px #000;\n  transition: all 0.2s linear;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.2);\n    opacity: 0.6;\n  }\n\n  &:hover > span {\n    transform: scale(1.2);\n  }\n`;\n\nexport const Online = styled.span`\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 100%;\n  background-color: lime;\n`;\n\nexport const Offline = styled.span`\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 100%;\n  background-color: tomato;\n`;\n\nexport const Avatar = styled.img`\n  width: 48px;\n`;\n\nexport const Name = styled.p`\n  display: inline-block;\n`;\n","import React from 'react';\nimport { Online, Offline, Avatar, Name, Item } from './styles';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <Item>\n      {isOnline ? <Online /> : <Offline />}\n\n      <Avatar src={avatar} alt={name} />\n      <Name>{name}</Name>\n    </Item>\n  );\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from './styles';\nimport FriendListItem from './FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <Container>\n      {friends.map(({ id, avatar = '#', name, isOnline }) => {\n        return (\n          <FriendListItem\n            key={id}\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  margin: 80px auto 10px auto;\n  width: 500px;\n  border-collapse: collapse;\n`;\n\nexport const TableHeader = styled.th`\n  background-color: #b0e0e6;\n  border: 2px dotted #fdf5e6;\n  height: 50px;\n`;\n\nexport const TableData = styled.td`\n  text-align: center;\n  background-color: #fdf5e6;\n  border: 2px dotted #add8e6;\n  height: 30px;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { TableData } from './styles';\n\nconst TransactionLines = ({ items }) => {\n  return items.map(({ id, type, amount, currency }) => {\n    return (\n      <tr key={id}>\n        <TableData>{type}</TableData>\n        <TableData>{amount}</TableData>\n        <TableData>{currency}</TableData>\n      </tr>\n    );\n  });\n};\n\nexport default TransactionLines;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionLines from './TransactionLines';\nimport { Table, TableHeader } from './styles';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <TableHeader>Type</TableHeader>\n          <TableHeader>Amount</TableHeader>\n          <TableHeader>Currency</TableHeader>\n        </tr>\n      </thead>\n\n      <tbody>\n        <TransactionLines items={items} />\n      </tbody>\n    </Table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/profile/Profile';\nimport Statistics from './components/statistics/Statistics';\nimport FriendList from './components/friendList/FriendList';\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}